@use "sass:math";

//  Ensure that the body will always be rendered to the full height of the
//  viewport, even if the content is short enough that the body would not
//  ordinarily reach the bottom.
html {
	height: 100%;
}
body {
	min-height: 100%;
}

.screen-only {
	@media not screen {
		display: none !important;
	}
}

.flex-wrapper {
	@include media-breakpoint-up(sm) {
		display: -webkit-box;
		display: -moz-box;
		display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;
	}
}

.flex-rows {
	flex: {
		direction: column;
		wrap: wrap;
	}
}

.flex-cols {
	flex: {
		direction: row;
		wrap: wrap;
	}
}

.flex-item {
	flex: {
		basis: 100%;
	}
}

.grid-wrapper {
	display: -moz-grid;
	display: -ms-grid;
	display: grid;
}

@include media-breakpoint-up(sm) {
	.grid-cols {
		grid-template-columns: repeat(3, 1fr);
	}
}

header {
	background: {
		color: var(--header-color);
		position: center center;
		repeat: no-repeat;
		size: cover;
	}
	border-bottom: {
		color: $bell-blue;
		style: solid;
		width: $header-border;
	}
	height: $header-height;
}

#main {
	border: {
		//  Ochre stripe of the header border
		top: {
			color: $bell-ochre;
			style: solid;
			width: $header-border;
		}
		//  Blue strip of the footer border
		bottom: {
			color: $bell-blue;
			style: solid;
			width: $footer-border;
		}
	}
	justify-content: center;
	margin: {
		left: auto;
		right: auto;
	}
	max-width: $content-width-max;
	@include media-breakpoint-up(xl) {
		@include vertical-border("left");
		@include vertical-border("right");
	}
}

$about-clear: math.div($avi-height, 2) - $header-border;
#about {
	@include media-breakpoint-up(md) {
		flex: 1.5 1 0%;
	}
	@include media-breakpoint-up(md) {
		@include vertical-border("right");
		order: 1;
		min-width: 15em;
		max-width: 25em;
	}
	//  Get ready for some fuckery
	@include media-breakpoint-up(md) {
		.logo.gravatar a {
			position: absolute;
			top: $header-height + $header-border - math.div($avi-height, 2);
		}
		#about-text {
			margin-top: $about-clear;
		}
	}

	> .contents {
		margin: 0 auto;
		max-width: 30em;
	}
}

#about-logos {
	margin-top: 1em;
}

main {
	@include media-breakpoint-up(md) {
		article,
		section {
			max-width: 60em;
		}
	}
	&.flex-item {
		@include media-breakpoint-up(md) {
			flex: 4 0 0%;
			order: 2;
		}
	}
}

footer {
	border-top: {
		color: $bell-ochre;
		style: solid;
		width: $footer-border;
	}

	.flex-item {
		flex: 1 0 0%;
		height: 1em;
	}
}

body.hide-panels {
	#about,
	#nav,
	#anchor-wrap,
	header,
	footer {
		display: none;
	}
}

@include media-breakpoint-up(md) {
	@media only screen and (min-height: 800px) {
		body:not(.hide-panels) {
			#main {
				// not sure where the extra 4px are coming from
				height: calc(100vh - #{core-height()} + 4px);
			}
		}
		main,
		#about {
			height: 100%;
		}
		#about-text {
			height: calc(100% - #{$about-clear});
		}
		main,
		#about-text {
			overflow-y: auto;
		}
	}
}

//  Centers and clamps YouTube embeds to look reasonable.
.youtube {
	//  Centering
	margin: 0 auto 1em;
	width: 100%;
	//  Constrain the width of the interior containers
	max-width: 480px;

	//  Unsure what this does, but it's necessary.
	position: relative;

	//  The divs are vertically empty(?), so force the inner to have height
	& > div {
		padding-bottom: 56.25%;
	}

	//  Pin the embed window within its wrappers to exactly fill them.
	iframe {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}
